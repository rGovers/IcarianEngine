#version 450

layout(location = 0) in vec2 vUV;

#!pushtexture(0, colorSampler)
#!pushtexture(1, emissionSampler)

layout(location = 0) out vec4 fragColor;

const int directions = 8;
const float emissionRadius = 0.005;
const int quality = 3;
const float pi2 = 6.2831850718;

void main()
{
    // Emission
    vec4 color = texture(colorSampler, vUV);
    vec4 emissive = texture(emissionSampler, vUV);

    for (int i = 0; i < directions; i++)
    {
        float d = (i / float(directions)) * pi2;
        vec2 dr = vec2(cos(d), sin(d)) * emissionRadius;
        for (int j = 0; j < quality; j++)
        {
            emissive += texture(emissionSampler, vUV + dr * (j / float(quality)));
        }
    }

    emissive /= quality * directions;

    fragColor = color + emissive;
}