#version 450

layout(location = 0) in vec2 vUV;

#!texture(0, colorSampler)
#!texture(1, normalSampler)
#!texture(2, aoSampler)

#!structure(AmbientLightBuffer, 3, ambientLightBuffer)

layout(location = 0) out vec4 fragColor;

const int kernelSize = 1;
const int limit = kernelSize * 2 + 1;
const int maxKernelSize = limit * limit;
const float stepValue = 0.001;

void main()
{
    vec4 normal = texture(normalSampler, vUV);
    if (normal.w < 0.5)
    {
        discard;
    }

    vec4 color = texture(colorSampler, vUV);

    float ao = texture(aoSampler, vUV).x;

    vec4 lCr = ambientLightBuffer.LightColor;

    fragColor = vec4(color.rgb * lCr.xyz * lCr.w * sqrt(1 - ao), 1.0);
}