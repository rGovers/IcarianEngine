#!import(Maths)

vec3 FreS(float a_cos, vec3 a_f0)
{
    return a_f0 + (1.0 - a_f0) * pow(clamp(1.0 - a_cos, 0.0, 1.0), 5.0);
}

float DistGGX(vec3 a_n, vec3 a_h, float a_rough)
{
    float r2 = a_rough * a_rough;
    float r4 = r2 * r2;
    float d = max(dot(a_n, a_h), 0.0);
    float d2 = d * d;

    float de = (d2 * (r4 - 1.0) + 1.0);
    float s = PI * de * de;

    return r4 / s;
}
float SchGGX(float a_d, float a_rough)
{
    float r = a_rough + 1.0;
    float k = (r * r) / 8.0;

    float de = a_d * (1.0 - k) + k;

    return a_d / de;
}
float Smi(vec3 a_n, vec3 a_v, vec3 a_l, float a_rough)
{
    float dV = max(dot(a_n, a_v), 0.0);
    float dL = max(dot(a_n, a_l), 0.0);
    float gxA = SchGGX(dV, a_rough);
    float gxB = SchGGX(dL, a_rough);

    return gxA * gxB;
}